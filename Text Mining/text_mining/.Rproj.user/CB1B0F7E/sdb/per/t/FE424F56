{
    "collab_server" : "",
    "contents" : "###-----------------------------------------------------------###\n###           Text Mining with R for Non-coders               ###\n###            R script created by Daniel Choy                ###\n###   Carleton College Gould Library Research Data Service    ###\n###     Please Contact Kristin Partlo with any Questions      ###\n###-----------------------------------------------------------###\n\n\n### Text Handling and Basic Text Visuzalization for Mac users ###\n\n\n\n##################################################################\n### 1. Install Necessary Packages for Text Handling            ###\n##################################################################\n\ninstall.packages(\"tm\") #Package for text mining\ninstall.packages(\"slam\")\ninstall.packages(\"dplyr\")\ninstall.packages(\"readr\") #Package to read file\n\nlibrary(tm)\nlibrary(slam)\nlibrary(dplyr)\nlibrary(readr)\n\ninstall.packages(\"rJava\")\nlibrary(rJava)\nSys.setenv(JAVA_HOME=\"/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre\")\ndyn.load('/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/server/libjvm.dylib')\n\nlibrary(NLP4kec)\n\n##################################################################\n### 2. Text Handling - Call the file that consists the text    ###\n##################################################################\n\n#Launch Morpheme Analyzer (use Standford Core NLP )\nparsedData = text_parser(path = \"./Rscript/Oatmeal_Cookies.xlsx\"\n                         ,language = \"en\")\n\nparsedData\n\n# If your data file (csv or xlsx) is located in the same directory folder with your project file,\n# just set your path as the above. Note the PowerPoint Slides for more detail.\n\n\n# Run through the lines below until line 121\n\n\n##################################################################\n### 3. Text Handling - Text Pre-processing                     ###\n##################################################################\n\n#Create Corpus\ncorp = VCorpus(VectorSource(parsedData))\n\n#Remove Punctuation and Special Characters\ncorp = tm_map(corp, removePunctuation)\n\n#Remove Numbers\ncorp = tm_map(corp, removeNumbers)\n\n#Chnage to lower case letters\ncorp = tm_map(corp, tolower)\n\n#Remove particular words\ncorp = tm_map(corp, removeWords, c(\"is\", \"the\",\"or\",\"and\",\"for\",\"that\",\"this\",\"more\",\"so\", \"be\"))\n\n#manage synonyms\nfor (j in seq(corp))\n{\n  corp[[j]] <- gsub(\"like\", \"love\", corp[[j]])\n  corp[[j]] <- gsub(\"hate\", \"dislike\", corp[[j]])\n}\n##################################################################\n\n#change to text document form\ncorp = tm_map(corp, PlainTextDocument)\n\n#create Document Term Matrix (DTM) - (length of the word is set as 2)\ndtm = DocumentTermMatrix(corp, control=list(removeNumbers=FALSE, wordLengths=c(2,Inf)))\n\n#create Term Document Matirx\ntdm = TermDocumentMatrix(corp, control=list(removeNumbers=TRUE, wordLengths=c(2,Inf)))\n\n#remove Sparse Terms \ndtm = removeSparseTerms(dtm, as.numeric(0.98))\n\n#find word frequency \nfreq = colSums(as.matrix(dtm))\nhead(freq)\n\n#save DTM as frame form\ndtm_df = as.data.frame(as.matrix(dtm))\n\n#extract DTM as CSV\nwrite_excel_csv(dtm_df, \"./dtm.csv\")\n\n#word frequency\nlength(freq)\n\n#sort words in descending order\nfreq[head(order(-freq), 5)]\n\n#sort words in ascending order\nfreq[head(order(freq), 10)]\n\n#Find Frequent Terms (for example greater than 20 and lower than 341) )\nfindFreqTerms(dtm, lowfreq = 20, highfreq = 341)\n\n#word frequency visualization\nwordDf = data.frame(word=names(freq), freq=freq)\n\n##################################################################\n### 4. Text Data Visualization - Basic visualization           ###\n##################################################################\n\n# BAR CHART\n\n\nlibrary(ggplot2)\n\n#Macbook user needs to import fonts\ninstall.packages(\"extrafont\")\nlibrary(extrafont)\n#font_import()\nloadfonts(device=\"postscript\")\n\n#show word frequency through bar chart\nggplot(wordDf, aes(x=word, y=freq)) + geom_bar(stat = \"identity\") + theme(axis.text.x = element_text(family = \"AppleGothic\"))\n\n#show 30 words through bar chart \nggplot(head(wordDf,10), aes(x=word, y=freq)) + geom_bar(stat = \"identity\") + theme(axis.text.x = element_text(family = \"AppleGothic\"))\n\n#show top 20 words through bar chart\nggplot(head(arrange(wordDf,-freq),20), aes(x=reorder(word,-freq), y=freq)) + geom_bar(stat = \"identity\") + theme(axis.text.x = element_text(family = \"AppleGothic\"))\n\n\n# WORD CLOUD\ninstall.packages(\"wordcloud\")\nlibrary(wordcloud)\n\npal = brewer.pal(n = 12, name = \"Set2\") #  n:number of colors you want to use, name:the set of color\n# note http://colorbrewer2.org/\n\nwordcloud(wordDf$word # word\n          , wordDf$freq # frequency\n          , min.freq = 5 # minimum frequency\n          , colors = pal # palette information\n          , rot.per = 0.5 # word rotation degree\n          , random.order = F # decision of word appearance in random way (False or True)\n          , scale = c(3,1) # the front number should be large so the most freqeuntly appeared number can show up in greater size\n          , family=\"AppleGothic\") # Macbook users need to set font\n\n\n# TREE MAP\ninstall.packages(\"treemap\")\nlibrary(treemap)\ntreemap(wordDf # set data\n        ,title = \"Word Tree Map\"\n        ,index = c(\"word\") # set variable that will go inside the box\n        ,vSize = \"freq\"  # set box size\n        ,fontfamily.labels = \"AppleGothic\" # Macbook users need to set font\n        ,fontsize.labels = 12 # set font size\n        ,palette=pal # palette information\n        ,border.col = \"white\") # set border color\n",
    "created" : 1508967234659.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2753499615",
    "id" : "FE424F56",
    "lastKnownWriteTime" : 1516248746,
    "last_content_update" : 1516248746652,
    "path" : "~/Desktop/Library Data Student Assistants/Text Mining/text_mining/Rscript/text_handling_for_MAC.R",
    "project_path" : "Rscript/text_handling_for_MAC.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}