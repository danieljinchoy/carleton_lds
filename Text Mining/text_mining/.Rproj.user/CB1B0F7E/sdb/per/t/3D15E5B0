{
    "collab_server" : "",
    "contents" : "###-----------------------------------------------------------###\n###           Text Mining with R for Non-coders               ###\n###            R script created by Daniel Choy                ###\n###   Carleton College Gould Library Research Data Service    ###\n###     Please Contact Kristin Partlo with any Questions      ###\n###-----------------------------------------------------------###\n\n###              Keyword Analysis for Mac users               ###\n\n\n##################################################################\n### 1. Install Necessary Packages for Text Handling / Analysis ###\n##################################################################\n\n\ninstall.packages(\"tm\") #Package for text mining\ninstall.packages(\"slam\")\ninstall.packages(\"dplyr\")\ninstall.packages(\"readr\") #Package to read file\n\nlibrary(tm)\nlibrary(slam)\nlibrary(dplyr)\nlibrary(readr)\n\ninstall.packages(\"rJava\")\nlibrary(rJava)\nSys.setenv(JAVA_HOME=\"/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre\")\ndyn.load('/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/server/libjvm.dylib')\n\nlibrary(NLP4kec)\n\n\n##################################################################\n#2. Text Handling - Call the file that consists the text you want to analyze\n##################################################################\n\n#Launch Morpheme Analyzer (use Standford Core NLP )\nparsedData = text_parser(path = \"./Rscript/Oatmeal_Cookies.xlsx\"\n                         ,language = \"en\")\n\nparsedData\n\n# If your data file (csv or xlsx) is located in the same directory folder with your project file,\n# just set your path as the above. Note the PowerPoint Slides for more detail.\n\n\n# You need to produce a DTM in order to do keyword analysis. Note your PowerPoint Slide if you have any confusion\n\n##################################################################\n### 3. Text Handling - Text Pre-processing                     ###\n##################################################################\n\n\n#change to text document form\ncorp = tm_map(corp, PlainTextDocument)\n\n#create Document Term Matrix (DTM) - (length of the word is set as 2)\ndtm = DocumentTermMatrix(corp, control=list(removeNumbers=FALSE, wordLengths=c(2,Inf)))\n\n#create Term Document Matirx\ntdm = TermDocumentMatrix(corp, control=list(removeNumbers=TRUE, wordLengths=c(2,Inf)))\n\n#remove Sparse Terms \ndtm = removeSparseTerms(dtm, as.numeric(0.98))\n\n\n##################################################################\n### 3. Keyword Analysis                                        ###\n##################################################################\n\n# Extract your Keyword\n\n# find related keywords of \"Cookie\"\nfindAssocs(dtm, terms = \"cookie\", corlimit = 0.2)  #insert your keyword here. For example I have put cookie here\n\n# Find correlations \ndtm_m = as.matrix(dtm)\ndtm_m\ncor_term = cor(dtm_m)\ncor_term\ncor_ref = cor_term[,\"cookie\"]\ncor_ref\n\n#Using the value of TF-IDF, find related keyword\ndtmW = DocumentTermMatrix(corp, control=list(wordLengths=c(2,Inf),\n                                            weighting = function(x) weightTfIdf(x, normalize = TRUE))) \n#Give a \"weight\" value to Tf-Idf\n\ndtmW\n\n\n\n## Remove spaces next to the words\ncolnames(dtmW) = trimws(colnames(dtmW))\ndtmW = dtmW[,nchar(colnames(dtm)) > 1]\n\n\ndtmW = removeSparseTerms(dtmW, as.numeric(0.96))\ndtmW\n\nfindAssocs(dtmW, \"cookie\", 0.01)\n\n##################################################################\n### 3. Data Visualization of Keyword Analysis                  ###\n##################################################################\n\n\ninstall.packages(c(\"igraph\", \"network\", \"sna\", \"GGally\")) \ninstall.packages(\"ggplot2\")\nlibrary(igraph)\nlibrary(network)\nlibrary(sna)\nlibrary(ggplot2)\nlibrary(GGally)\n\n# Create a Data of Network Map version ( This creates a matrix of correlation coefficient between words)\n\ndtmW_m = as.matrix(dtmW)\ncor_termW = cor(dtmW_m)\n\n# Control the number of \"Edge\"\ncor_termW[cor_termW < 0.25] = 0\n\n# Create an object to draw a Network Map\nnet = network(cor_termW, directed = FALSE)\nnet\n\n# Find the value of the \"betweenness of network\"Network의 betweenness and color yellow with the nodes that have the higher rank (10%) \nnet %v% \"mode\" <- ifelse(betweenness(net) > quantile(betweenness(net), 0.9), \"big\", \"small\")\nnode_color = c(\"small\" = \"grey\", \"big\" = \"gold\")\n\n# Set the value of Network edge size\nset.edge.value(net, \"edgeSize\", cor_termW * 2)\n\n\n\n\n###Draw Network Map  ###\n\n\nggnet2(net # Network\n       ,label=TRUE # Node label - true or false\n       ,label.size = 3 # label font size\n       ,color = \"mode\" # node color standard\n       ,palette = node_color # node color\n       ,size = \"degree\" # the size of the node is differed based on the degree cetrality value\n       ,edge.size = \"edgeSize\" # \n       ,family=\"AppleGothic\") # mac users need this\n\n\nword_network = data.frame(word = rownames(cor_termW),\n                          centrality = degree(net),\n                          betweenness = betweenness(net),\n                          eigenvector = evcent(net))\n\n## Draw Network Map based on certain keywords ##\n\n\nkeyword = c(\"grain\",\"baked\",\"sample\")  #This is just an example\nsub_cor_term = cor_termW[,keyword]\nhead(sub_cor_term)\nsub_cor_term = sub_cor_term[!(rownames(sub_cor_term) %in% keyword),]\nhead(sub_cor_term)\nsub_cor_term = sub_cor_term[rowSums(sub_cor_term)>0,]\nhead(sub_cor_term)\nnet2 = network(sub_cor_term, directed = FALSE, matrix.type=\"bipartite\")\n\nggnet2(net2 \n       ,label=TRUE\n       ,label.size = 3 \n       ,edge.size = sub_cor_term[sub_cor_term>0] * 2\n       ,size = degree(net2) \n       ,family=\"AppleGothic\")\n",
    "created" : 1516258290420.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2066821877",
    "id" : "3D15E5B0",
    "lastKnownWriteTime" : 1516258370,
    "last_content_update" : 1516258370426,
    "path" : "~/Desktop/Library Data Student Assistants/Text Mining/text_mining/Rscript/keyword_analysis.R",
    "project_path" : "Rscript/keyword_analysis.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}